cmake_minimum_required(VERSION 3.12)
project(SeidelMethod VERSION 1.0.0 DESCRIPTION "–ú–µ—Ç–æ–¥ –ó–µ–π–¥–µ–ª—è –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º –ª–∏–Ω–µ–π–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞ C++
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# –î–ª—è Windows –æ—Ç–∫–ª—é—á–∞–µ–º —Å–ª–æ–∂–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
if(WIN32)
    message("ü™ü Windows detected - disabling advanced features")
    set(BUILD_TESTS OFF)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W3 /EHsc")
else()
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Linux/GCC
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -pedantic -O2")
endif()

# –û–ø—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
option(BUILD_TESTS "Build tests" OFF)  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–∫–ª—é—á–∞–µ–º —Ç–µ—Å—Ç—ã –Ω–∞ Windows
option(BUILD_APPS "Build applications" ON)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
if(NOT EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/src/SeidelSolver.cpp")
    message(FATAL_ERROR "‚ùå File not found: src/SeidelSolver.cpp")
endif()

if(NOT EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/apps/main.cpp")
    message(FATAL_ERROR "‚ùå File not found: apps/main.cpp")
endif()

# –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–≤—Å–µ –≤ –æ–¥–Ω–æ–º)
add_executable(seidel_solver
    src/SeidelSolver.cpp
    apps/main.cpp
)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ—á–Ω—ã–µ —Ñ–∞–π–ª—ã
target_include_directories(seidel_solver PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_CURRENT_SOURCE_DIR}/src
)

# –î–ª—è Windows –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
if(WIN32)
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–ª—è Windows
    target_compile_definitions(seidel_solver PRIVATE _CRT_SECURE_NO_WARNINGS)
endif()

# –¢–µ—Å—Ç—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã –∏ –Ω–µ Windows
if(BUILD_TESTS AND NOT WIN32)
    find_package(GTest)
    if(GTEST_FOUND)
        message(STATUS "‚úÖ GoogleTest found: ${GTEST_FOUND}")
        
        add_executable(seidel_tests tests/unit_tests.cpp)
        target_include_directories(seidel_tests PRIVATE 
            ${CMAKE_CURRENT_SOURCE_DIR}/include
            ${CMAKE_CURRENT_SOURCE_DIR}/src
            ${CMAKE_CURRENT_SOURCE_DIR}/tests
        )
        target_link_libraries(seidel_tests GTest::gtest GTest::gtest_main)
        
        # –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        file(COPY tests/test_data DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
        
    else()
        message(STATUS "‚ö†Ô∏è  GoogleTest not found, tests disabled")
    endif()
else()
    message(STATUS "üí° Tests disabled for Windows")
endif()

# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
message(STATUS "Project: ${PROJECT_NAME}")
message(STATUS "Version: ${PROJECT_VERSION}")
message(STATUS "C++ Standard: ${CMAKE_CXX_STANDARD}")
message(STATUS "Build tests: ${BUILD_TESTS}")
message(STATUS "Build apps: ${BUILD_APPS}")
message(STATUS "Source directory: ${CMAKE_CURRENT_SOURCE_DIR}")